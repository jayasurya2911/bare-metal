
Stm32h743xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000093c  08000298  08000298  00001298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000bd4  08000bdc  00001bdc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  08000bd4  08000bd4  00001bd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .fini_array   00000004  08000bd8  08000bd8  00001bd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .data         00000000  24000000  24000000  00001bdc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  24000000  08000bdc  00002000  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  2400001c  08000bdc  0000201c  2**0
                  ALLOC
  8 .ARM.attributes 0000002a  00000000  00000000  00001bdc  2**0
                  CONTENTS, READONLY
  9 .debug_info   00001039  00000000  00000000  00001c06  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 00000360  00000000  00000000  00002c3f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 000000c8  00000000  00000000  00002fa0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 0000008b  00000000  00000000  00003068  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  0000169c  00000000  00000000  000030f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00001009  00000000  00000000  0000478f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    00006004  00000000  00000000  00005798  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000043  00000000  00000000  0000b79c  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000268  00000000  00000000  0000b7e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 0000005d  00000000  00000000  0000ba48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000298 <__do_global_dtors_aux>:
 8000298:	b510      	push	{r4, lr}
 800029a:	4c05      	ldr	r4, [pc, #20]	@ (80002b0 <__do_global_dtors_aux+0x18>)
 800029c:	7823      	ldrb	r3, [r4, #0]
 800029e:	b933      	cbnz	r3, 80002ae <__do_global_dtors_aux+0x16>
 80002a0:	4b04      	ldr	r3, [pc, #16]	@ (80002b4 <__do_global_dtors_aux+0x1c>)
 80002a2:	b113      	cbz	r3, 80002aa <__do_global_dtors_aux+0x12>
 80002a4:	4804      	ldr	r0, [pc, #16]	@ (80002b8 <__do_global_dtors_aux+0x20>)
 80002a6:	f3af 8000 	nop.w
 80002aa:	2301      	movs	r3, #1
 80002ac:	7023      	strb	r3, [r4, #0]
 80002ae:	bd10      	pop	{r4, pc}
 80002b0:	24000000 	.word	0x24000000
 80002b4:	00000000 	.word	0x00000000
 80002b8:	08000bbc 	.word	0x08000bbc

080002bc <frame_dummy>:
 80002bc:	b508      	push	{r3, lr}
 80002be:	4b03      	ldr	r3, [pc, #12]	@ (80002cc <frame_dummy+0x10>)
 80002c0:	b11b      	cbz	r3, 80002ca <frame_dummy+0xe>
 80002c2:	4903      	ldr	r1, [pc, #12]	@ (80002d0 <frame_dummy+0x14>)
 80002c4:	4803      	ldr	r0, [pc, #12]	@ (80002d4 <frame_dummy+0x18>)
 80002c6:	f3af 8000 	nop.w
 80002ca:	bd08      	pop	{r3, pc}
 80002cc:	00000000 	.word	0x00000000
 80002d0:	24000004 	.word	0x24000004
 80002d4:	08000bbc 	.word	0x08000bbc

080002d8 <GPIO_Periclkcontrol>:
 *
 * @Note              -  none

 */
void GPIO_Periclkcontrol(GPIO_RegDef_t *pGPIOx , uint8_t EnorDi)
{
 80002d8:	b480      	push	{r7}
 80002da:	b083      	sub	sp, #12
 80002dc:	af00      	add	r7, sp, #0
 80002de:	6078      	str	r0, [r7, #4]
 80002e0:	460b      	mov	r3, r1
 80002e2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002e4:	78fb      	ldrb	r3, [r7, #3]
 80002e6:	2b01      	cmp	r3, #1
 80002e8:	d174      	bne.n	80003d4 <GPIO_Periclkcontrol+0xfc>
		{
			if(pGPIOx == GPIOA)
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	4a76      	ldr	r2, [pc, #472]	@ (80004c8 <GPIO_Periclkcontrol+0x1f0>)
 80002ee:	4293      	cmp	r3, r2
 80002f0:	d108      	bne.n	8000304 <GPIO_Periclkcontrol+0x2c>
			{
				GPIOA_PCLK_EN();
 80002f2:	4b76      	ldr	r3, [pc, #472]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 80002f4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80002f8:	4a74      	ldr	r2, [pc, #464]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 80002fa:	f043 0301 	orr.w	r3, r3, #1
 80002fe:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
				{
					GPIOI_PCLK_DI();
				}

		}
}
 8000302:	e0db      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
			}else if (pGPIOx == GPIOB)
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	4a72      	ldr	r2, [pc, #456]	@ (80004d0 <GPIO_Periclkcontrol+0x1f8>)
 8000308:	4293      	cmp	r3, r2
 800030a:	d108      	bne.n	800031e <GPIO_Periclkcontrol+0x46>
				GPIOB_PCLK_EN();
 800030c:	4b6f      	ldr	r3, [pc, #444]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 800030e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000312:	4a6e      	ldr	r2, [pc, #440]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000314:	f043 0302 	orr.w	r3, r3, #2
 8000318:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 800031c:	e0ce      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
			}else if (pGPIOx == GPIOC)
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a6c      	ldr	r2, [pc, #432]	@ (80004d4 <GPIO_Periclkcontrol+0x1fc>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d108      	bne.n	8000338 <GPIO_Periclkcontrol+0x60>
				GPIOC_PCLK_EN();
 8000326:	4b69      	ldr	r3, [pc, #420]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000328:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800032c:	4a67      	ldr	r2, [pc, #412]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 800032e:	f043 0304 	orr.w	r3, r3, #4
 8000332:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 8000336:	e0c1      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
			}else if (pGPIOx == GPIOD)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a67      	ldr	r2, [pc, #412]	@ (80004d8 <GPIO_Periclkcontrol+0x200>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d108      	bne.n	8000352 <GPIO_Periclkcontrol+0x7a>
				GPIOD_PCLK_EN();
 8000340:	4b62      	ldr	r3, [pc, #392]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000342:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000346:	4a61      	ldr	r2, [pc, #388]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000348:	f043 0308 	orr.w	r3, r3, #8
 800034c:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 8000350:	e0b4      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
			}else if (pGPIOx == GPIOE)
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a61      	ldr	r2, [pc, #388]	@ (80004dc <GPIO_Periclkcontrol+0x204>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d108      	bne.n	800036c <GPIO_Periclkcontrol+0x94>
				GPIOE_PCLK_EN();
 800035a:	4b5c      	ldr	r3, [pc, #368]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 800035c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000360:	4a5a      	ldr	r2, [pc, #360]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000362:	f043 0310 	orr.w	r3, r3, #16
 8000366:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 800036a:	e0a7      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
			}else if (pGPIOx == GPIOF)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a5c      	ldr	r2, [pc, #368]	@ (80004e0 <GPIO_Periclkcontrol+0x208>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d108      	bne.n	8000386 <GPIO_Periclkcontrol+0xae>
				GPIOF_PCLK_EN();
 8000374:	4b55      	ldr	r3, [pc, #340]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000376:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800037a:	4a54      	ldr	r2, [pc, #336]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 800037c:	f043 0320 	orr.w	r3, r3, #32
 8000380:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 8000384:	e09a      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
			}else if (pGPIOx == GPIOG)
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	4a56      	ldr	r2, [pc, #344]	@ (80004e4 <GPIO_Periclkcontrol+0x20c>)
 800038a:	4293      	cmp	r3, r2
 800038c:	d108      	bne.n	80003a0 <GPIO_Periclkcontrol+0xc8>
				GPIOG_PCLK_EN();
 800038e:	4b4f      	ldr	r3, [pc, #316]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000390:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000394:	4a4d      	ldr	r2, [pc, #308]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000396:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800039a:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 800039e:	e08d      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
			}else if (pGPIOx == GPIOH)
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	4a51      	ldr	r2, [pc, #324]	@ (80004e8 <GPIO_Periclkcontrol+0x210>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d108      	bne.n	80003ba <GPIO_Periclkcontrol+0xe2>
				GPIOH_PCLK_EN();
 80003a8:	4b48      	ldr	r3, [pc, #288]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 80003aa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80003ae:	4a47      	ldr	r2, [pc, #284]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 80003b0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80003b4:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 80003b8:	e080      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
			}else if (pGPIOx == GPIOI)
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4a4b      	ldr	r2, [pc, #300]	@ (80004ec <GPIO_Periclkcontrol+0x214>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d17c      	bne.n	80004bc <GPIO_Periclkcontrol+0x1e4>
				GPIOI_PCLK_EN();
 80003c2:	4b42      	ldr	r3, [pc, #264]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 80003c4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80003c8:	4a40      	ldr	r2, [pc, #256]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 80003ca:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80003ce:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 80003d2:	e073      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
			   if(pGPIOx == GPIOA)
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	4a3c      	ldr	r2, [pc, #240]	@ (80004c8 <GPIO_Periclkcontrol+0x1f0>)
 80003d8:	4293      	cmp	r3, r2
 80003da:	d108      	bne.n	80003ee <GPIO_Periclkcontrol+0x116>
					GPIOA_PCLK_DI();
 80003dc:	4b3b      	ldr	r3, [pc, #236]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 80003de:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80003e2:	4a3a      	ldr	r2, [pc, #232]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 80003e4:	f023 0301 	bic.w	r3, r3, #1
 80003e8:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 80003ec:	e066      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
				}else if (pGPIOx == GPIOB)
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	4a37      	ldr	r2, [pc, #220]	@ (80004d0 <GPIO_Periclkcontrol+0x1f8>)
 80003f2:	4293      	cmp	r3, r2
 80003f4:	d108      	bne.n	8000408 <GPIO_Periclkcontrol+0x130>
					GPIOB_PCLK_DI();
 80003f6:	4b35      	ldr	r3, [pc, #212]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 80003f8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80003fc:	4a33      	ldr	r2, [pc, #204]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 80003fe:	f023 0302 	bic.w	r3, r3, #2
 8000402:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 8000406:	e059      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
				}else if (pGPIOx == GPIOC)
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	4a32      	ldr	r2, [pc, #200]	@ (80004d4 <GPIO_Periclkcontrol+0x1fc>)
 800040c:	4293      	cmp	r3, r2
 800040e:	d108      	bne.n	8000422 <GPIO_Periclkcontrol+0x14a>
					GPIOC_PCLK_DI();
 8000410:	4b2e      	ldr	r3, [pc, #184]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000412:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000416:	4a2d      	ldr	r2, [pc, #180]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000418:	f023 0304 	bic.w	r3, r3, #4
 800041c:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 8000420:	e04c      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
				}else if (pGPIOx == GPIOD)
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	4a2c      	ldr	r2, [pc, #176]	@ (80004d8 <GPIO_Periclkcontrol+0x200>)
 8000426:	4293      	cmp	r3, r2
 8000428:	d108      	bne.n	800043c <GPIO_Periclkcontrol+0x164>
					GPIOD_PCLK_DI();
 800042a:	4b28      	ldr	r3, [pc, #160]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 800042c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000430:	4a26      	ldr	r2, [pc, #152]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000432:	f023 0308 	bic.w	r3, r3, #8
 8000436:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 800043a:	e03f      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
				}else if (pGPIOx == GPIOE)
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	4a27      	ldr	r2, [pc, #156]	@ (80004dc <GPIO_Periclkcontrol+0x204>)
 8000440:	4293      	cmp	r3, r2
 8000442:	d108      	bne.n	8000456 <GPIO_Periclkcontrol+0x17e>
					GPIOE_PCLK_DI();
 8000444:	4b21      	ldr	r3, [pc, #132]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000446:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800044a:	4a20      	ldr	r2, [pc, #128]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 800044c:	f023 0310 	bic.w	r3, r3, #16
 8000450:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 8000454:	e032      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
				}else if (pGPIOx == GPIOF)
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	4a21      	ldr	r2, [pc, #132]	@ (80004e0 <GPIO_Periclkcontrol+0x208>)
 800045a:	4293      	cmp	r3, r2
 800045c:	d108      	bne.n	8000470 <GPIO_Periclkcontrol+0x198>
					GPIOF_PCLK_DI();
 800045e:	4b1b      	ldr	r3, [pc, #108]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000460:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000464:	4a19      	ldr	r2, [pc, #100]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000466:	f023 0320 	bic.w	r3, r3, #32
 800046a:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 800046e:	e025      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
				}else if (pGPIOx == GPIOG)
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	4a1c      	ldr	r2, [pc, #112]	@ (80004e4 <GPIO_Periclkcontrol+0x20c>)
 8000474:	4293      	cmp	r3, r2
 8000476:	d108      	bne.n	800048a <GPIO_Periclkcontrol+0x1b2>
					GPIOG_PCLK_DI();
 8000478:	4b14      	ldr	r3, [pc, #80]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 800047a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800047e:	4a13      	ldr	r2, [pc, #76]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000480:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000484:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 8000488:	e018      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
				}else if (pGPIOx == GPIOH)
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	4a16      	ldr	r2, [pc, #88]	@ (80004e8 <GPIO_Periclkcontrol+0x210>)
 800048e:	4293      	cmp	r3, r2
 8000490:	d108      	bne.n	80004a4 <GPIO_Periclkcontrol+0x1cc>
					GPIOH_PCLK_DI();
 8000492:	4b0e      	ldr	r3, [pc, #56]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 8000494:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000498:	4a0c      	ldr	r2, [pc, #48]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 800049a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800049e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 80004a2:	e00b      	b.n	80004bc <GPIO_Periclkcontrol+0x1e4>
				}else if (pGPIOx == GPIOI)
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	4a11      	ldr	r2, [pc, #68]	@ (80004ec <GPIO_Periclkcontrol+0x214>)
 80004a8:	4293      	cmp	r3, r2
 80004aa:	d107      	bne.n	80004bc <GPIO_Periclkcontrol+0x1e4>
					GPIOI_PCLK_DI();
 80004ac:	4b07      	ldr	r3, [pc, #28]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 80004ae:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80004b2:	4a06      	ldr	r2, [pc, #24]	@ (80004cc <GPIO_Periclkcontrol+0x1f4>)
 80004b4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80004b8:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
}
 80004bc:	bf00      	nop
 80004be:	370c      	adds	r7, #12
 80004c0:	46bd      	mov	sp, r7
 80004c2:	bc80      	pop	{r7}
 80004c4:	4770      	bx	lr
 80004c6:	bf00      	nop
 80004c8:	58020000 	.word	0x58020000
 80004cc:	58024400 	.word	0x58024400
 80004d0:	58020400 	.word	0x58020400
 80004d4:	58020800 	.word	0x58020800
 80004d8:	58020c00 	.word	0x58020c00
 80004dc:	58021000 	.word	0x58021000
 80004e0:	58021400 	.word	0x58021400
 80004e4:	58021800 	.word	0x58021800
 80004e8:	58021c00 	.word	0x58021c00
 80004ec:	58022000 	.word	0x58022000

080004f0 <GPIO_Init>:
 * @Note              -  none

 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{;
 80004f0:	b580      	push	{r7, lr}
 80004f2:	b086      	sub	sp, #24
 80004f4:	af00      	add	r7, sp, #0
 80004f6:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 80004f8:	2300      	movs	r3, #0
 80004fa:	617b      	str	r3, [r7, #20]
	//1 . configure the mode of gpio pin

	GPIO_Periclkcontrol(pGPIOHandle->pGPIOx, ENABLE);
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	2101      	movs	r1, #1
 8000502:	4618      	mov	r0, r3
 8000504:	f7ff fee8 	bl	80002d8 <GPIO_Periclkcontrol>

	if(pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode<=GPIO_MODE_ANALOG)
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	795b      	ldrb	r3, [r3, #5]
 800050c:	2b03      	cmp	r3, #3
 800050e:	d820      	bhi.n	8000552 <GPIO_Init+0x62>
	{
		temp=(pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode<<(2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber));
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	795b      	ldrb	r3, [r3, #5]
 8000514:	461a      	mov	r2, r3
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	791b      	ldrb	r3, [r3, #4]
 800051a:	005b      	lsls	r3, r3, #1
 800051c:	fa02 f303 	lsl.w	r3, r2, r3
 8000520:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<<(2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber));   // clearing
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	681a      	ldr	r2, [r3, #0]
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	791b      	ldrb	r3, [r3, #4]
 800052c:	005b      	lsls	r3, r3, #1
 800052e:	2103      	movs	r1, #3
 8000530:	fa01 f303 	lsl.w	r3, r1, r3
 8000534:	43db      	mvns	r3, r3
 8000536:	4619      	mov	r1, r3
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	400a      	ands	r2, r1
 800053e:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |=temp;
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	6819      	ldr	r1, [r3, #0]
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	697a      	ldr	r2, [r7, #20]
 800054c:	430a      	orrs	r2, r1
 800054e:	601a      	str	r2, [r3, #0]
 8000550:	e10d      	b.n	800076e <GPIO_Init+0x27e>

	}
	else
	{
				//interrupt mode
		if(pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode==GPIO_MODE_IT_FT)
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	795b      	ldrb	r3, [r3, #5]
 8000556:	2b04      	cmp	r3, #4
 8000558:	d12a      	bne.n	80005b0 <GPIO_Init+0xc0>
		{
			pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber));
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	681a      	ldr	r2, [r3, #0]
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	791b      	ldrb	r3, [r3, #4]
 8000564:	005b      	lsls	r3, r3, #1
 8000566:	2103      	movs	r1, #3
 8000568:	fa01 f303 	lsl.w	r3, r1, r3
 800056c:	43db      	mvns	r3, r3
 800056e:	4619      	mov	r1, r3
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	400a      	ands	r2, r1
 8000576:	601a      	str	r2, [r3, #0]
				// 1 configure ftsr
			EXTI->FTSR1	|=(1<<pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);
 8000578:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 800057c:	685b      	ldr	r3, [r3, #4]
 800057e:	687a      	ldr	r2, [r7, #4]
 8000580:	7912      	ldrb	r2, [r2, #4]
 8000582:	4611      	mov	r1, r2
 8000584:	2201      	movs	r2, #1
 8000586:	408a      	lsls	r2, r1
 8000588:	4611      	mov	r1, r2
 800058a:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 800058e:	430b      	orrs	r3, r1
 8000590:	6053      	str	r3, [r2, #4]
			//clear the corresponding rtsr register
			EXTI->RTSR1 &= ~(1<<pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);
 8000592:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8000596:	681b      	ldr	r3, [r3, #0]
 8000598:	687a      	ldr	r2, [r7, #4]
 800059a:	7912      	ldrb	r2, [r2, #4]
 800059c:	4611      	mov	r1, r2
 800059e:	2201      	movs	r2, #1
 80005a0:	408a      	lsls	r2, r1
 80005a2:	43d2      	mvns	r2, r2
 80005a4:	4611      	mov	r1, r2
 80005a6:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80005aa:	400b      	ands	r3, r1
 80005ac:	6013      	str	r3, [r2, #0]
 80005ae:	e05b      	b.n	8000668 <GPIO_Init+0x178>


		}else if(pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode==GPIO_MODE_IT_RT)
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	795b      	ldrb	r3, [r3, #5]
 80005b4:	2b05      	cmp	r3, #5
 80005b6:	d12a      	bne.n	800060e <GPIO_Init+0x11e>
		{pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber));
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	681a      	ldr	r2, [r3, #0]
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	791b      	ldrb	r3, [r3, #4]
 80005c2:	005b      	lsls	r3, r3, #1
 80005c4:	2103      	movs	r1, #3
 80005c6:	fa01 f303 	lsl.w	r3, r1, r3
 80005ca:	43db      	mvns	r3, r3
 80005cc:	4619      	mov	r1, r3
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	400a      	ands	r2, r1
 80005d4:	601a      	str	r2, [r3, #0]
			// 1 configure rtsr
			EXTI->RTSR1	|=(1<<pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);
 80005d6:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	687a      	ldr	r2, [r7, #4]
 80005de:	7912      	ldrb	r2, [r2, #4]
 80005e0:	4611      	mov	r1, r2
 80005e2:	2201      	movs	r2, #1
 80005e4:	408a      	lsls	r2, r1
 80005e6:	4611      	mov	r1, r2
 80005e8:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80005ec:	430b      	orrs	r3, r1
 80005ee:	6013      	str	r3, [r2, #0]
				//clear the corresponding rtsr register
			EXTI->FTSR1 &= ~(1<<pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);
 80005f0:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 80005f4:	685b      	ldr	r3, [r3, #4]
 80005f6:	687a      	ldr	r2, [r7, #4]
 80005f8:	7912      	ldrb	r2, [r2, #4]
 80005fa:	4611      	mov	r1, r2
 80005fc:	2201      	movs	r2, #1
 80005fe:	408a      	lsls	r2, r1
 8000600:	43d2      	mvns	r2, r2
 8000602:	4611      	mov	r1, r2
 8000604:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8000608:	400b      	ands	r3, r1
 800060a:	6053      	str	r3, [r2, #4]
 800060c:	e02c      	b.n	8000668 <GPIO_Init+0x178>
		}else if (pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode==GPIO_MODE_IT_RFT)
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	795b      	ldrb	r3, [r3, #5]
 8000612:	2b06      	cmp	r3, #6
 8000614:	d128      	bne.n	8000668 <GPIO_Init+0x178>
		{pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber));
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	681b      	ldr	r3, [r3, #0]
 800061a:	681a      	ldr	r2, [r3, #0]
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	791b      	ldrb	r3, [r3, #4]
 8000620:	005b      	lsls	r3, r3, #1
 8000622:	2103      	movs	r1, #3
 8000624:	fa01 f303 	lsl.w	r3, r1, r3
 8000628:	43db      	mvns	r3, r3
 800062a:	4619      	mov	r1, r3
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	400a      	ands	r2, r1
 8000632:	601a      	str	r2, [r3, #0]
			// 1 configure ftsr and rtsr both
			EXTI->RTSR1	|=(1<<pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);
 8000634:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8000638:	681b      	ldr	r3, [r3, #0]
 800063a:	687a      	ldr	r2, [r7, #4]
 800063c:	7912      	ldrb	r2, [r2, #4]
 800063e:	4611      	mov	r1, r2
 8000640:	2201      	movs	r2, #1
 8000642:	408a      	lsls	r2, r1
 8000644:	4611      	mov	r1, r2
 8000646:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 800064a:	430b      	orrs	r3, r1
 800064c:	6013      	str	r3, [r2, #0]
			//clear the corresponding rtsr register
			EXTI->FTSR1 |= (1<<pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);
 800064e:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8000652:	685b      	ldr	r3, [r3, #4]
 8000654:	687a      	ldr	r2, [r7, #4]
 8000656:	7912      	ldrb	r2, [r2, #4]
 8000658:	4611      	mov	r1, r2
 800065a:	2201      	movs	r2, #1
 800065c:	408a      	lsls	r2, r1
 800065e:	4611      	mov	r1, r2
 8000660:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8000664:	430b      	orrs	r3, r1
 8000666:	6053      	str	r3, [r2, #4]


		}
			//2  configure syscfg register
			uint8_t temp1 = pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber / 4 ;
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	791b      	ldrb	r3, [r3, #4]
 800066c:	089b      	lsrs	r3, r3, #2
 800066e:	74fb      	strb	r3, [r7, #19]
			uint8_t temp2 = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber % 4)*4;
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	791b      	ldrb	r3, [r3, #4]
 8000674:	f003 0303 	and.w	r3, r3, #3
 8000678:	b2db      	uxtb	r3, r3
 800067a:	009b      	lsls	r3, r3, #2
 800067c:	74bb      	strb	r3, [r7, #18]
			uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	681b      	ldr	r3, [r3, #0]
 8000682:	4a8a      	ldr	r2, [pc, #552]	@ (80008ac <GPIO_Init+0x3bc>)
 8000684:	4293      	cmp	r3, r2
 8000686:	d039      	beq.n	80006fc <GPIO_Init+0x20c>
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	4a88      	ldr	r2, [pc, #544]	@ (80008b0 <GPIO_Init+0x3c0>)
 800068e:	4293      	cmp	r3, r2
 8000690:	d032      	beq.n	80006f8 <GPIO_Init+0x208>
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	4a87      	ldr	r2, [pc, #540]	@ (80008b4 <GPIO_Init+0x3c4>)
 8000698:	4293      	cmp	r3, r2
 800069a:	d02b      	beq.n	80006f4 <GPIO_Init+0x204>
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	4a85      	ldr	r2, [pc, #532]	@ (80008b8 <GPIO_Init+0x3c8>)
 80006a2:	4293      	cmp	r3, r2
 80006a4:	d024      	beq.n	80006f0 <GPIO_Init+0x200>
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	4a84      	ldr	r2, [pc, #528]	@ (80008bc <GPIO_Init+0x3cc>)
 80006ac:	4293      	cmp	r3, r2
 80006ae:	d01d      	beq.n	80006ec <GPIO_Init+0x1fc>
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	4a82      	ldr	r2, [pc, #520]	@ (80008c0 <GPIO_Init+0x3d0>)
 80006b6:	4293      	cmp	r3, r2
 80006b8:	d016      	beq.n	80006e8 <GPIO_Init+0x1f8>
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	681b      	ldr	r3, [r3, #0]
 80006be:	4a81      	ldr	r2, [pc, #516]	@ (80008c4 <GPIO_Init+0x3d4>)
 80006c0:	4293      	cmp	r3, r2
 80006c2:	d00f      	beq.n	80006e4 <GPIO_Init+0x1f4>
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	681b      	ldr	r3, [r3, #0]
 80006c8:	4a7f      	ldr	r2, [pc, #508]	@ (80008c8 <GPIO_Init+0x3d8>)
 80006ca:	4293      	cmp	r3, r2
 80006cc:	d008      	beq.n	80006e0 <GPIO_Init+0x1f0>
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	681b      	ldr	r3, [r3, #0]
 80006d2:	4a7e      	ldr	r2, [pc, #504]	@ (80008cc <GPIO_Init+0x3dc>)
 80006d4:	4293      	cmp	r3, r2
 80006d6:	d101      	bne.n	80006dc <GPIO_Init+0x1ec>
 80006d8:	2308      	movs	r3, #8
 80006da:	e010      	b.n	80006fe <GPIO_Init+0x20e>
 80006dc:	2300      	movs	r3, #0
 80006de:	e00e      	b.n	80006fe <GPIO_Init+0x20e>
 80006e0:	2307      	movs	r3, #7
 80006e2:	e00c      	b.n	80006fe <GPIO_Init+0x20e>
 80006e4:	2306      	movs	r3, #6
 80006e6:	e00a      	b.n	80006fe <GPIO_Init+0x20e>
 80006e8:	2305      	movs	r3, #5
 80006ea:	e008      	b.n	80006fe <GPIO_Init+0x20e>
 80006ec:	2304      	movs	r3, #4
 80006ee:	e006      	b.n	80006fe <GPIO_Init+0x20e>
 80006f0:	2303      	movs	r3, #3
 80006f2:	e004      	b.n	80006fe <GPIO_Init+0x20e>
 80006f4:	2302      	movs	r3, #2
 80006f6:	e002      	b.n	80006fe <GPIO_Init+0x20e>
 80006f8:	2301      	movs	r3, #1
 80006fa:	e000      	b.n	80006fe <GPIO_Init+0x20e>
 80006fc:	2300      	movs	r3, #0
 80006fe:	747b      	strb	r3, [r7, #17]
			SYSCFG_PCLK_EN();
 8000700:	4b73      	ldr	r3, [pc, #460]	@ (80008d0 <GPIO_Init+0x3e0>)
 8000702:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8000706:	4a72      	ldr	r2, [pc, #456]	@ (80008d0 <GPIO_Init+0x3e0>)
 8000708:	f043 0302 	orr.w	r3, r3, #2
 800070c:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
			SYSCFG->EXTICR[temp1] &= ~(0xFU << temp2);
 8000710:	4a70      	ldr	r2, [pc, #448]	@ (80008d4 <GPIO_Init+0x3e4>)
 8000712:	7cfb      	ldrb	r3, [r7, #19]
 8000714:	3302      	adds	r3, #2
 8000716:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800071a:	7cbb      	ldrb	r3, [r7, #18]
 800071c:	220f      	movs	r2, #15
 800071e:	fa02 f303 	lsl.w	r3, r2, r3
 8000722:	43da      	mvns	r2, r3
 8000724:	486b      	ldr	r0, [pc, #428]	@ (80008d4 <GPIO_Init+0x3e4>)
 8000726:	7cfb      	ldrb	r3, [r7, #19]
 8000728:	400a      	ands	r2, r1
 800072a:	3302      	adds	r3, #2
 800072c:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
			SYSCFG->EXTICR[temp1] |= portcode<<(temp2);
 8000730:	4a68      	ldr	r2, [pc, #416]	@ (80008d4 <GPIO_Init+0x3e4>)
 8000732:	7cfb      	ldrb	r3, [r7, #19]
 8000734:	3302      	adds	r3, #2
 8000736:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800073a:	7c79      	ldrb	r1, [r7, #17]
 800073c:	7cbb      	ldrb	r3, [r7, #18]
 800073e:	fa01 f303 	lsl.w	r3, r1, r3
 8000742:	4618      	mov	r0, r3
 8000744:	4963      	ldr	r1, [pc, #396]	@ (80008d4 <GPIO_Init+0x3e4>)
 8000746:	7cfb      	ldrb	r3, [r7, #19]
 8000748:	4302      	orrs	r2, r0
 800074a:	3302      	adds	r3, #2
 800074c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

	// 3 enable the exti  interrupt delivery using IMR
			EXTI->IMR1 |=(1<<pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);
 8000750:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8000754:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8000758:	687a      	ldr	r2, [r7, #4]
 800075a:	7912      	ldrb	r2, [r2, #4]
 800075c:	4611      	mov	r1, r2
 800075e:	2201      	movs	r2, #1
 8000760:	408a      	lsls	r2, r1
 8000762:	4611      	mov	r1, r2
 8000764:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8000768:	430b      	orrs	r3, r1
 800076a:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
	}


	temp=0;
 800076e:	2300      	movs	r3, #0
 8000770:	617b      	str	r3, [r7, #20]
	//1 . configure the output speed
	 temp=pGPIOHandle->GPIO_Pin_Config.GPIO_PinSpeed<<(2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	799b      	ldrb	r3, [r3, #6]
 8000776:	461a      	mov	r2, r3
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	791b      	ldrb	r3, [r3, #4]
 800077c:	005b      	lsls	r3, r3, #1
 800077e:	fa02 f303 	lsl.w	r3, r2, r3
 8000782:	617b      	str	r3, [r7, #20]
	 pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3<<(2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber));			// clearing
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	681b      	ldr	r3, [r3, #0]
 8000788:	689a      	ldr	r2, [r3, #8]
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	791b      	ldrb	r3, [r3, #4]
 800078e:	005b      	lsls	r3, r3, #1
 8000790:	2103      	movs	r1, #3
 8000792:	fa01 f303 	lsl.w	r3, r1, r3
 8000796:	43db      	mvns	r3, r3
 8000798:	4619      	mov	r1, r3
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	400a      	ands	r2, r1
 80007a0:	609a      	str	r2, [r3, #8]
	 pGPIOHandle->pGPIOx->OSPEEDR |=temp;
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	681b      	ldr	r3, [r3, #0]
 80007a6:	6899      	ldr	r1, [r3, #8]
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	697a      	ldr	r2, [r7, #20]
 80007ae:	430a      	orrs	r2, r1
 80007b0:	609a      	str	r2, [r3, #8]

temp=0;
 80007b2:	2300      	movs	r3, #0
 80007b4:	617b      	str	r3, [r7, #20]

	//1 . configure the output type

	temp= pGPIOHandle->GPIO_Pin_Config.GPIO_PinOPType<<(pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);
 80007b6:	687b      	ldr	r3, [r7, #4]
 80007b8:	7a1b      	ldrb	r3, [r3, #8]
 80007ba:	461a      	mov	r2, r3
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	791b      	ldrb	r3, [r3, #4]
 80007c0:	fa02 f303 	lsl.w	r3, r2, r3
 80007c4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1<<(pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber));		// clearing
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	681b      	ldr	r3, [r3, #0]
 80007ca:	685a      	ldr	r2, [r3, #4]
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	791b      	ldrb	r3, [r3, #4]
 80007d0:	4619      	mov	r1, r3
 80007d2:	2301      	movs	r3, #1
 80007d4:	408b      	lsls	r3, r1
 80007d6:	43db      	mvns	r3, r3
 80007d8:	4619      	mov	r1, r3
 80007da:	687b      	ldr	r3, [r7, #4]
 80007dc:	681b      	ldr	r3, [r3, #0]
 80007de:	400a      	ands	r2, r1
 80007e0:	605a      	str	r2, [r3, #4]
	 pGPIOHandle->pGPIOx->OTYPER |=temp;
 80007e2:	687b      	ldr	r3, [r7, #4]
 80007e4:	681b      	ldr	r3, [r3, #0]
 80007e6:	6859      	ldr	r1, [r3, #4]
 80007e8:	687b      	ldr	r3, [r7, #4]
 80007ea:	681b      	ldr	r3, [r3, #0]
 80007ec:	697a      	ldr	r2, [r7, #20]
 80007ee:	430a      	orrs	r2, r1
 80007f0:	605a      	str	r2, [r3, #4]

temp=0;
 80007f2:	2300      	movs	r3, #0
 80007f4:	617b      	str	r3, [r7, #20]
	//1 . configure the pull-up or pull down settings

	temp= pGPIOHandle->GPIO_Pin_Config.GPIO_PinPuPdControl<<( 2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber);
 80007f6:	687b      	ldr	r3, [r7, #4]
 80007f8:	79db      	ldrb	r3, [r3, #7]
 80007fa:	461a      	mov	r2, r3
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	791b      	ldrb	r3, [r3, #4]
 8000800:	005b      	lsls	r3, r3, #1
 8000802:	fa02 f303 	lsl.w	r3, r2, r3
 8000806:	617b      	str	r3, [r7, #20]
	 pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber) );		// clearing
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	681b      	ldr	r3, [r3, #0]
 800080c:	68da      	ldr	r2, [r3, #12]
 800080e:	687b      	ldr	r3, [r7, #4]
 8000810:	791b      	ldrb	r3, [r3, #4]
 8000812:	005b      	lsls	r3, r3, #1
 8000814:	2103      	movs	r1, #3
 8000816:	fa01 f303 	lsl.w	r3, r1, r3
 800081a:	43db      	mvns	r3, r3
 800081c:	4619      	mov	r1, r3
 800081e:	687b      	ldr	r3, [r7, #4]
 8000820:	681b      	ldr	r3, [r3, #0]
 8000822:	400a      	ands	r2, r1
 8000824:	60da      	str	r2, [r3, #12]
	 pGPIOHandle->pGPIOx->PUPDR |=temp;
 8000826:	687b      	ldr	r3, [r7, #4]
 8000828:	681b      	ldr	r3, [r3, #0]
 800082a:	68d9      	ldr	r1, [r3, #12]
 800082c:	687b      	ldr	r3, [r7, #4]
 800082e:	681b      	ldr	r3, [r3, #0]
 8000830:	697a      	ldr	r2, [r7, #20]
 8000832:	430a      	orrs	r2, r1
 8000834:	60da      	str	r2, [r3, #12]

	//1 . configure the alternate functionality of the pin

	 if(pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000836:	687b      	ldr	r3, [r7, #4]
 8000838:	795b      	ldrb	r3, [r3, #5]
 800083a:	2b02      	cmp	r3, #2
 800083c:	d132      	bne.n	80008a4 <GPIO_Init+0x3b4>
	 {
		 //configure alt functionality
		 uint32_t temp1,temp2;
		 temp1= pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber/8;
 800083e:	687b      	ldr	r3, [r7, #4]
 8000840:	791b      	ldrb	r3, [r3, #4]
 8000842:	08db      	lsrs	r3, r3, #3
 8000844:	b2db      	uxtb	r3, r3
 8000846:	60fb      	str	r3, [r7, #12]
		 temp2=pGPIOHandle->GPIO_Pin_Config.GPIO_PinNumber%8;
 8000848:	687b      	ldr	r3, [r7, #4]
 800084a:	791b      	ldrb	r3, [r3, #4]
 800084c:	f003 0307 	and.w	r3, r3, #7
 8000850:	60bb      	str	r3, [r7, #8]
		 pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2) );  // clearing
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	681b      	ldr	r3, [r3, #0]
 8000856:	68fa      	ldr	r2, [r7, #12]
 8000858:	3208      	adds	r2, #8
 800085a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800085e:	68bb      	ldr	r3, [r7, #8]
 8000860:	009b      	lsls	r3, r3, #2
 8000862:	210f      	movs	r1, #15
 8000864:	fa01 f303 	lsl.w	r3, r1, r3
 8000868:	43db      	mvns	r3, r3
 800086a:	4619      	mov	r1, r3
 800086c:	687b      	ldr	r3, [r7, #4]
 800086e:	681b      	ldr	r3, [r3, #0]
 8000870:	4011      	ands	r1, r2
 8000872:	68fa      	ldr	r2, [r7, #12]
 8000874:	3208      	adds	r2, #8
 8000876:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		 pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_Pin_Config.GPIO_PinAltFunMode<< (4 * temp2) );  // setting
 800087a:	687b      	ldr	r3, [r7, #4]
 800087c:	681b      	ldr	r3, [r3, #0]
 800087e:	68fa      	ldr	r2, [r7, #12]
 8000880:	3208      	adds	r2, #8
 8000882:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000886:	687b      	ldr	r3, [r7, #4]
 8000888:	7a5b      	ldrb	r3, [r3, #9]
 800088a:	4619      	mov	r1, r3
 800088c:	68bb      	ldr	r3, [r7, #8]
 800088e:	009b      	lsls	r3, r3, #2
 8000890:	fa01 f303 	lsl.w	r3, r1, r3
 8000894:	4619      	mov	r1, r3
 8000896:	687b      	ldr	r3, [r7, #4]
 8000898:	681b      	ldr	r3, [r3, #0]
 800089a:	4311      	orrs	r1, r2
 800089c:	68fa      	ldr	r2, [r7, #12]
 800089e:	3208      	adds	r2, #8
 80008a0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]





}
 80008a4:	bf00      	nop
 80008a6:	3718      	adds	r7, #24
 80008a8:	46bd      	mov	sp, r7
 80008aa:	bd80      	pop	{r7, pc}
 80008ac:	58020000 	.word	0x58020000
 80008b0:	58020400 	.word	0x58020400
 80008b4:	58020800 	.word	0x58020800
 80008b8:	58020c00 	.word	0x58020c00
 80008bc:	58021000 	.word	0x58021000
 80008c0:	58021400 	.word	0x58021400
 80008c4:	58021800 	.word	0x58021800
 80008c8:	58021c00 	.word	0x58021c00
 80008cc:	58022000 	.word	0x58022000
 80008d0:	58024400 	.word	0x58024400
 80008d4:	58000400 	.word	0x58000400

080008d8 <GPIO_ToggleOutputPin>:
 *
 * @Note              -  none

 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t Pinnumber )
{
 80008d8:	b480      	push	{r7}
 80008da:	b083      	sub	sp, #12
 80008dc:	af00      	add	r7, sp, #0
 80008de:	6078      	str	r0, [r7, #4]
 80008e0:	460b      	mov	r3, r1
 80008e2:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODR  ^= ( 1 << Pinnumber);
 80008e4:	687b      	ldr	r3, [r7, #4]
 80008e6:	695b      	ldr	r3, [r3, #20]
 80008e8:	78fa      	ldrb	r2, [r7, #3]
 80008ea:	2101      	movs	r1, #1
 80008ec:	fa01 f202 	lsl.w	r2, r1, r2
 80008f0:	405a      	eors	r2, r3
 80008f2:	687b      	ldr	r3, [r7, #4]
 80008f4:	615a      	str	r2, [r3, #20]

}
 80008f6:	bf00      	nop
 80008f8:	370c      	adds	r7, #12
 80008fa:	46bd      	mov	sp, r7
 80008fc:	bc80      	pop	{r7}
 80008fe:	4770      	bx	lr

08000900 <GPIO_IRQConfig>:
 *
 * @Note              -  none

 */
void GPIO_IRQConfig(uint8_t IRQNumber,  uint8_t EnorDi)
{
 8000900:	b480      	push	{r7}
 8000902:	b083      	sub	sp, #12
 8000904:	af00      	add	r7, sp, #0
 8000906:	4603      	mov	r3, r0
 8000908:	460a      	mov	r2, r1
 800090a:	71fb      	strb	r3, [r7, #7]
 800090c:	4613      	mov	r3, r2
 800090e:	71bb      	strb	r3, [r7, #6]
	if(EnorDi==ENABLE)
 8000910:	79bb      	ldrb	r3, [r7, #6]
 8000912:	2b01      	cmp	r3, #1
 8000914:	d133      	bne.n	800097e <GPIO_IRQConfig+0x7e>
	{
		if(IRQNumber<=31)
 8000916:	79fb      	ldrb	r3, [r7, #7]
 8000918:	2b1f      	cmp	r3, #31
 800091a:	d80a      	bhi.n	8000932 <GPIO_IRQConfig+0x32>
		{
			*NVIC_ISER0 |=(1<<IRQNumber);
 800091c:	4b34      	ldr	r3, [pc, #208]	@ (80009f0 <GPIO_IRQConfig+0xf0>)
 800091e:	681b      	ldr	r3, [r3, #0]
 8000920:	79fa      	ldrb	r2, [r7, #7]
 8000922:	2101      	movs	r1, #1
 8000924:	fa01 f202 	lsl.w	r2, r1, r2
 8000928:	4611      	mov	r1, r2
 800092a:	4a31      	ldr	r2, [pc, #196]	@ (80009f0 <GPIO_IRQConfig+0xf0>)
 800092c:	430b      	orrs	r3, r1
 800092e:	6013      	str	r3, [r2, #0]
				}

	}


}
 8000930:	e059      	b.n	80009e6 <GPIO_IRQConfig+0xe6>
		else if(IRQNumber>31 &&  IRQNumber<64)
 8000932:	79fb      	ldrb	r3, [r7, #7]
 8000934:	2b1f      	cmp	r3, #31
 8000936:	d90f      	bls.n	8000958 <GPIO_IRQConfig+0x58>
 8000938:	79fb      	ldrb	r3, [r7, #7]
 800093a:	2b3f      	cmp	r3, #63	@ 0x3f
 800093c:	d80c      	bhi.n	8000958 <GPIO_IRQConfig+0x58>
			*NVIC_ISER1 |=((1<<IRQNumber % 32));
 800093e:	4b2d      	ldr	r3, [pc, #180]	@ (80009f4 <GPIO_IRQConfig+0xf4>)
 8000940:	681b      	ldr	r3, [r3, #0]
 8000942:	79fa      	ldrb	r2, [r7, #7]
 8000944:	f002 021f 	and.w	r2, r2, #31
 8000948:	2101      	movs	r1, #1
 800094a:	fa01 f202 	lsl.w	r2, r1, r2
 800094e:	4611      	mov	r1, r2
 8000950:	4a28      	ldr	r2, [pc, #160]	@ (80009f4 <GPIO_IRQConfig+0xf4>)
 8000952:	430b      	orrs	r3, r1
 8000954:	6013      	str	r3, [r2, #0]
 8000956:	e046      	b.n	80009e6 <GPIO_IRQConfig+0xe6>
		else if(IRQNumber>=64 &&  IRQNumber<=95)
 8000958:	79fb      	ldrb	r3, [r7, #7]
 800095a:	2b3f      	cmp	r3, #63	@ 0x3f
 800095c:	d943      	bls.n	80009e6 <GPIO_IRQConfig+0xe6>
 800095e:	79fb      	ldrb	r3, [r7, #7]
 8000960:	2b5f      	cmp	r3, #95	@ 0x5f
 8000962:	d840      	bhi.n	80009e6 <GPIO_IRQConfig+0xe6>
			*NVIC_ISER2 |=((1<<IRQNumber % 64));
 8000964:	4b24      	ldr	r3, [pc, #144]	@ (80009f8 <GPIO_IRQConfig+0xf8>)
 8000966:	681b      	ldr	r3, [r3, #0]
 8000968:	79fa      	ldrb	r2, [r7, #7]
 800096a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800096e:	2101      	movs	r1, #1
 8000970:	fa01 f202 	lsl.w	r2, r1, r2
 8000974:	4611      	mov	r1, r2
 8000976:	4a20      	ldr	r2, [pc, #128]	@ (80009f8 <GPIO_IRQConfig+0xf8>)
 8000978:	430b      	orrs	r3, r1
 800097a:	6013      	str	r3, [r2, #0]
}
 800097c:	e033      	b.n	80009e6 <GPIO_IRQConfig+0xe6>
		if(IRQNumber<=31)
 800097e:	79fb      	ldrb	r3, [r7, #7]
 8000980:	2b1f      	cmp	r3, #31
 8000982:	d80a      	bhi.n	800099a <GPIO_IRQConfig+0x9a>
					*NVIC_ICER0 |=(1<<IRQNumber);
 8000984:	4b1d      	ldr	r3, [pc, #116]	@ (80009fc <GPIO_IRQConfig+0xfc>)
 8000986:	681b      	ldr	r3, [r3, #0]
 8000988:	79fa      	ldrb	r2, [r7, #7]
 800098a:	2101      	movs	r1, #1
 800098c:	fa01 f202 	lsl.w	r2, r1, r2
 8000990:	4611      	mov	r1, r2
 8000992:	4a1a      	ldr	r2, [pc, #104]	@ (80009fc <GPIO_IRQConfig+0xfc>)
 8000994:	430b      	orrs	r3, r1
 8000996:	6013      	str	r3, [r2, #0]
}
 8000998:	e025      	b.n	80009e6 <GPIO_IRQConfig+0xe6>
				else if(IRQNumber>31 &&  IRQNumber<64)
 800099a:	79fb      	ldrb	r3, [r7, #7]
 800099c:	2b1f      	cmp	r3, #31
 800099e:	d90f      	bls.n	80009c0 <GPIO_IRQConfig+0xc0>
 80009a0:	79fb      	ldrb	r3, [r7, #7]
 80009a2:	2b3f      	cmp	r3, #63	@ 0x3f
 80009a4:	d80c      	bhi.n	80009c0 <GPIO_IRQConfig+0xc0>
					*NVIC_ICER1 |=((1<<IRQNumber % 32));
 80009a6:	4b16      	ldr	r3, [pc, #88]	@ (8000a00 <GPIO_IRQConfig+0x100>)
 80009a8:	681b      	ldr	r3, [r3, #0]
 80009aa:	79fa      	ldrb	r2, [r7, #7]
 80009ac:	f002 021f 	and.w	r2, r2, #31
 80009b0:	2101      	movs	r1, #1
 80009b2:	fa01 f202 	lsl.w	r2, r1, r2
 80009b6:	4611      	mov	r1, r2
 80009b8:	4a11      	ldr	r2, [pc, #68]	@ (8000a00 <GPIO_IRQConfig+0x100>)
 80009ba:	430b      	orrs	r3, r1
 80009bc:	6013      	str	r3, [r2, #0]
 80009be:	e012      	b.n	80009e6 <GPIO_IRQConfig+0xe6>
				else if(IRQNumber>=64 &&  IRQNumber<=95)
 80009c0:	79fb      	ldrb	r3, [r7, #7]
 80009c2:	2b3f      	cmp	r3, #63	@ 0x3f
 80009c4:	d90f      	bls.n	80009e6 <GPIO_IRQConfig+0xe6>
 80009c6:	79fb      	ldrb	r3, [r7, #7]
 80009c8:	2b5f      	cmp	r3, #95	@ 0x5f
 80009ca:	d80c      	bhi.n	80009e6 <GPIO_IRQConfig+0xe6>
					*NVIC_ICER2 |=((1<<IRQNumber % 64));
 80009cc:	4b0d      	ldr	r3, [pc, #52]	@ (8000a04 <GPIO_IRQConfig+0x104>)
 80009ce:	681b      	ldr	r3, [r3, #0]
 80009d0:	79fa      	ldrb	r2, [r7, #7]
 80009d2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80009d6:	2101      	movs	r1, #1
 80009d8:	fa01 f202 	lsl.w	r2, r1, r2
 80009dc:	4611      	mov	r1, r2
 80009de:	4a09      	ldr	r2, [pc, #36]	@ (8000a04 <GPIO_IRQConfig+0x104>)
 80009e0:	430b      	orrs	r3, r1
 80009e2:	6013      	str	r3, [r2, #0]
}
 80009e4:	e7ff      	b.n	80009e6 <GPIO_IRQConfig+0xe6>
 80009e6:	bf00      	nop
 80009e8:	370c      	adds	r7, #12
 80009ea:	46bd      	mov	sp, r7
 80009ec:	bc80      	pop	{r7}
 80009ee:	4770      	bx	lr
 80009f0:	e000e100 	.word	0xe000e100
 80009f4:	e000e104 	.word	0xe000e104
 80009f8:	e000e108 	.word	0xe000e108
 80009fc:	e000e180 	.word	0xe000e180
 8000a00:	e000e184 	.word	0xe000e184
 8000a04:	e000e188 	.word	0xe000e188

08000a08 <GPIO_IRQPriorityConfig>:




void GPIO_IRQPriorityConfig(uint32_t IRQNumber,uint32_t IRQPriority)
{
 8000a08:	b480      	push	{r7}
 8000a0a:	b085      	sub	sp, #20
 8000a0c:	af00      	add	r7, sp, #0
 8000a0e:	6078      	str	r0, [r7, #4]
 8000a10:	6039      	str	r1, [r7, #0]

			uint8_t iprx= IRQNumber/4;
 8000a12:	687b      	ldr	r3, [r7, #4]
 8000a14:	089b      	lsrs	r3, r3, #2
 8000a16:	73fb      	strb	r3, [r7, #15]
			uint8_t iprx_section= IRQNumber%4;
 8000a18:	687b      	ldr	r3, [r7, #4]
 8000a1a:	b2db      	uxtb	r3, r3
 8000a1c:	f003 0303 	and.w	r3, r3, #3
 8000a20:	73bb      	strb	r3, [r7, #14]

			uint32_t shift_amount = (8 * iprx_section)+(8 - NO_PR_BITS_IMPLEMENTED);
 8000a22:	7bbb      	ldrb	r3, [r7, #14]
 8000a24:	00db      	lsls	r3, r3, #3
 8000a26:	3304      	adds	r3, #4
 8000a28:	60bb      	str	r3, [r7, #8]
			*(NVIC_PR_BASE_ADDR + iprx	)=(IRQPriority<<shift_amount);
 8000a2a:	7bfb      	ldrb	r3, [r7, #15]
 8000a2c:	009a      	lsls	r2, r3, #2
 8000a2e:	4b06      	ldr	r3, [pc, #24]	@ (8000a48 <GPIO_IRQPriorityConfig+0x40>)
 8000a30:	4413      	add	r3, r2
 8000a32:	6839      	ldr	r1, [r7, #0]
 8000a34:	68ba      	ldr	r2, [r7, #8]
 8000a36:	fa01 f202 	lsl.w	r2, r1, r2
 8000a3a:	601a      	str	r2, [r3, #0]


}
 8000a3c:	bf00      	nop
 8000a3e:	3714      	adds	r7, #20
 8000a40:	46bd      	mov	sp, r7
 8000a42:	bc80      	pop	{r7}
 8000a44:	4770      	bx	lr
 8000a46:	bf00      	nop
 8000a48:	e000e400 	.word	0xe000e400

08000a4c <GPIO_IRQHandling>:
 *
 * @Note              -  none

 */
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000a4c:	b480      	push	{r7}
 8000a4e:	b083      	sub	sp, #12
 8000a50:	af00      	add	r7, sp, #0
 8000a52:	4603      	mov	r3, r0
 8000a54:	71fb      	strb	r3, [r7, #7]
	if(EXTI->PR1 & (1<<PinNumber))
 8000a56:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8000a5a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000a5e:	79fa      	ldrb	r2, [r7, #7]
 8000a60:	2101      	movs	r1, #1
 8000a62:	fa01 f202 	lsl.w	r2, r1, r2
 8000a66:	4013      	ands	r3, r2
 8000a68:	2b00      	cmp	r3, #0
 8000a6a:	d00d      	beq.n	8000a88 <GPIO_IRQHandling+0x3c>
		{
		EXTI->PR1 |= (1<<PinNumber);
 8000a6c:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8000a70:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000a74:	79fa      	ldrb	r2, [r7, #7]
 8000a76:	2101      	movs	r1, #1
 8000a78:	fa01 f202 	lsl.w	r2, r1, r2
 8000a7c:	4611      	mov	r1, r2
 8000a7e:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8000a82:	430b      	orrs	r3, r1
 8000a84:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
		}

}
 8000a88:	bf00      	nop
 8000a8a:	370c      	adds	r7, #12
 8000a8c:	46bd      	mov	sp, r7
 8000a8e:	bc80      	pop	{r7}
 8000a90:	4770      	bx	lr
	...

08000a94 <main>:
	for(uint32_t i = 0 ; i < 500000/2 ; i ++);
}


int main(void)
{
 8000a94:	b580      	push	{r7, lr}
 8000a96:	b086      	sub	sp, #24
 8000a98:	af00      	add	r7, sp, #0


//	memset(&GpioLed,0,sizeof(GpioLed));
//	memset(&GPIOBtn,0,sizeof(GpioLed));
//
		gpioled.pGPIOx=GPIOB;
 8000a9a:	4b18      	ldr	r3, [pc, #96]	@ (8000afc <main+0x68>)
 8000a9c:	60fb      	str	r3, [r7, #12]
		gpioled.GPIO_Pin_Config.GPIO_PinNumber=GPIO_PIN_NO_14;
 8000a9e:	230e      	movs	r3, #14
 8000aa0:	743b      	strb	r3, [r7, #16]
		gpioled.GPIO_Pin_Config.GPIO_PinMode=GPIO_MODE_OUT;
 8000aa2:	2301      	movs	r3, #1
 8000aa4:	747b      	strb	r3, [r7, #17]
		gpioled.GPIO_Pin_Config.GPIO_PinOPType=GPIO_OP_TYPE_PP;
 8000aa6:	2300      	movs	r3, #0
 8000aa8:	753b      	strb	r3, [r7, #20]
		gpioled.GPIO_Pin_Config.GPIO_PinSpeed=GPIO_SPEED_HIGH;
 8000aaa:	2303      	movs	r3, #3
 8000aac:	74bb      	strb	r3, [r7, #18]
		gpioled.GPIO_Pin_Config.GPIO_PinPuPdControl=GPIO_NO_PU_PD;
 8000aae:	2300      	movs	r3, #0
 8000ab0:	74fb      	strb	r3, [r7, #19]



	GPIO_Periclkcontrol(GPIOB,ENABLE);
 8000ab2:	2101      	movs	r1, #1
 8000ab4:	4811      	ldr	r0, [pc, #68]	@ (8000afc <main+0x68>)
 8000ab6:	f7ff fc0f 	bl	80002d8 <GPIO_Periclkcontrol>

	GPIO_Init(&gpioled);
 8000aba:	f107 030c 	add.w	r3, r7, #12
 8000abe:	4618      	mov	r0, r3
 8000ac0:	f7ff fd16 	bl	80004f0 <GPIO_Init>


	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOC;
 8000ac4:	4b0e      	ldr	r3, [pc, #56]	@ (8000b00 <main+0x6c>)
 8000ac6:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_Pin_Config.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000ac8:	230d      	movs	r3, #13
 8000aca:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_Pin_Config.GPIO_PinMode = GPIO_MODE_IT_RT;
 8000acc:	2305      	movs	r3, #5
 8000ace:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_Pin_Config.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000ad0:	2302      	movs	r3, #2
 8000ad2:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_Pin_Config.GPIO_PinPuPdControl = GPIO_NO_PU_PD;
 8000ad4:	2300      	movs	r3, #0
 8000ad6:	71fb      	strb	r3, [r7, #7]

	GPIO_Periclkcontrol(GPIOC,ENABLE);
 8000ad8:	2101      	movs	r1, #1
 8000ada:	4809      	ldr	r0, [pc, #36]	@ (8000b00 <main+0x6c>)
 8000adc:	f7ff fbfc 	bl	80002d8 <GPIO_Periclkcontrol>

	GPIO_Init(&GPIOBtn);
 8000ae0:	463b      	mov	r3, r7
 8000ae2:	4618      	mov	r0, r3
 8000ae4:	f7ff fd04 	bl	80004f0 <GPIO_Init>

	//IRQ configurations
		GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10,NVIC_IRQ_PRI15);
 8000ae8:	210f      	movs	r1, #15
 8000aea:	2028      	movs	r0, #40	@ 0x28
 8000aec:	f7ff ff8c 	bl	8000a08 <GPIO_IRQPriorityConfig>
	GPIO_IRQConfig	(IRQ_NO_EXTI15_10,ENABLE);
 8000af0:	2101      	movs	r1, #1
 8000af2:	2028      	movs	r0, #40	@ 0x28
 8000af4:	f7ff ff04 	bl	8000900 <GPIO_IRQConfig>

	 while(1);
 8000af8:	bf00      	nop
 8000afa:	e7fd      	b.n	8000af8 <main+0x64>
 8000afc:	58020400 	.word	0x58020400
 8000b00:	58020800 	.word	0x58020800

08000b04 <EXTI15_10_IRQHandler>:
	return 0;
}

void EXTI15_10_IRQHandler(void)
{
 8000b04:	b580      	push	{r7, lr}
 8000b06:	af00      	add	r7, sp, #0

	 /// delay(); //200ms . wait till button de-bouncing gets over
		GPIO_IRQHandling(GPIO_PIN_NO_13); //clear the pending event from exti line
 8000b08:	200d      	movs	r0, #13
 8000b0a:	f7ff ff9f 	bl	8000a4c <GPIO_IRQHandling>
		GPIO_ToggleOutputPin(GPIOB,GPIO_PIN_NO_14);
 8000b0e:	210e      	movs	r1, #14
 8000b10:	4802      	ldr	r0, [pc, #8]	@ (8000b1c <EXTI15_10_IRQHandler+0x18>)
 8000b12:	f7ff fee1 	bl	80008d8 <GPIO_ToggleOutputPin>

}
 8000b16:	bf00      	nop
 8000b18:	bd80      	pop	{r7, pc}
 8000b1a:	bf00      	nop
 8000b1c:	58020400 	.word	0x58020400

08000b20 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000b20:	480d      	ldr	r0, [pc, #52]	@ (8000b58 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000b22:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000b24:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000b28:	480c      	ldr	r0, [pc, #48]	@ (8000b5c <LoopForever+0x6>)
  ldr r1, =_edata
 8000b2a:	490d      	ldr	r1, [pc, #52]	@ (8000b60 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000b2c:	4a0d      	ldr	r2, [pc, #52]	@ (8000b64 <LoopForever+0xe>)
  movs r3, #0
 8000b2e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000b30:	e002      	b.n	8000b38 <LoopCopyDataInit>

08000b32 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000b32:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000b34:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000b36:	3304      	adds	r3, #4

08000b38 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000b38:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000b3a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000b3c:	d3f9      	bcc.n	8000b32 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000b3e:	4a0a      	ldr	r2, [pc, #40]	@ (8000b68 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000b40:	4c0a      	ldr	r4, [pc, #40]	@ (8000b6c <LoopForever+0x16>)
  movs r3, #0
 8000b42:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000b44:	e001      	b.n	8000b4a <LoopFillZerobss>

08000b46 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000b46:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000b48:	3204      	adds	r2, #4

08000b4a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000b4a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000b4c:	d3fb      	bcc.n	8000b46 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 8000b4e:	f000 f811 	bl	8000b74 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 8000b52:	f7ff ff9f 	bl	8000a94 <main>

08000b56 <LoopForever>:

LoopForever:
  b LoopForever
 8000b56:	e7fe      	b.n	8000b56 <LoopForever>
  ldr   r0, =_estack
 8000b58:	24080000 	.word	0x24080000
  ldr r0, =_sdata
 8000b5c:	24000000 	.word	0x24000000
  ldr r1, =_edata
 8000b60:	24000000 	.word	0x24000000
  ldr r2, =_sidata
 8000b64:	08000bdc 	.word	0x08000bdc
  ldr r2, =_sbss
 8000b68:	24000000 	.word	0x24000000
  ldr r4, =_ebss
 8000b6c:	2400001c 	.word	0x2400001c

08000b70 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000b70:	e7fe      	b.n	8000b70 <ADC1_2_IRQHandler>
	...

08000b74 <__libc_init_array>:
 8000b74:	b570      	push	{r4, r5, r6, lr}
 8000b76:	4d0d      	ldr	r5, [pc, #52]	@ (8000bac <__libc_init_array+0x38>)
 8000b78:	4c0d      	ldr	r4, [pc, #52]	@ (8000bb0 <__libc_init_array+0x3c>)
 8000b7a:	1b64      	subs	r4, r4, r5
 8000b7c:	10a4      	asrs	r4, r4, #2
 8000b7e:	2600      	movs	r6, #0
 8000b80:	42a6      	cmp	r6, r4
 8000b82:	d109      	bne.n	8000b98 <__libc_init_array+0x24>
 8000b84:	4d0b      	ldr	r5, [pc, #44]	@ (8000bb4 <__libc_init_array+0x40>)
 8000b86:	4c0c      	ldr	r4, [pc, #48]	@ (8000bb8 <__libc_init_array+0x44>)
 8000b88:	f000 f818 	bl	8000bbc <_init>
 8000b8c:	1b64      	subs	r4, r4, r5
 8000b8e:	10a4      	asrs	r4, r4, #2
 8000b90:	2600      	movs	r6, #0
 8000b92:	42a6      	cmp	r6, r4
 8000b94:	d105      	bne.n	8000ba2 <__libc_init_array+0x2e>
 8000b96:	bd70      	pop	{r4, r5, r6, pc}
 8000b98:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b9c:	4798      	blx	r3
 8000b9e:	3601      	adds	r6, #1
 8000ba0:	e7ee      	b.n	8000b80 <__libc_init_array+0xc>
 8000ba2:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ba6:	4798      	blx	r3
 8000ba8:	3601      	adds	r6, #1
 8000baa:	e7f2      	b.n	8000b92 <__libc_init_array+0x1e>
 8000bac:	08000bd4 	.word	0x08000bd4
 8000bb0:	08000bd4 	.word	0x08000bd4
 8000bb4:	08000bd4 	.word	0x08000bd4
 8000bb8:	08000bd8 	.word	0x08000bd8

08000bbc <_init>:
 8000bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bbe:	bf00      	nop
 8000bc0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000bc2:	bc08      	pop	{r3}
 8000bc4:	469e      	mov	lr, r3
 8000bc6:	4770      	bx	lr

08000bc8 <_fini>:
 8000bc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bca:	bf00      	nop
 8000bcc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000bce:	bc08      	pop	{r3}
 8000bd0:	469e      	mov	lr, r3
 8000bd2:	4770      	bx	lr
